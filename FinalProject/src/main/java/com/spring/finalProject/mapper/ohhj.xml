<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== --> <!-- mybatis를 사용함 -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="ohhj"> <!-- ohhj는 고유해야하는 식별자이므로, hr.xml에도 namespace명을 똑같이하게되면 충돌난다. => 보통 파일명과 일치시킨다. -->

	<!-- === 카테고리명 중복체크하기(Ajax 로 처리) === -->
	<select id="cNameDuplicateCheck" parameterType="String" resultType="int">
		select count(*)
		from tbl_boardCategory
		where bCategoryName = #{bCategoryName}
	</select>

	<!-- === 게시판 만들기 === -->
	<insert id="makeBCategory" parameterType="com.spring.board.model.BoardCategoryVO_OHJ">
		insert into tbl_boardCategory(bCategorySeq,bCategoryName,userType,writeAccess,commentAccess,header)
		values(tbl_boardCategory_bCategorySeq.nextval, #{bCategoryName}, #{userType}, #{writeAccess}, #{commentAccess},#{header})
	</insert>

	<!-- === 게시판 종류 목록 가져오기(Ajax 로 처리) === -->
	<select id="viewCategoryList" resultType="com.spring.board.model.BoardCategoryVO_OHJ">
		select bCategorySeq, bCategoryName, userType, writeAccess, commentAccess
		from tbl_boardCategory
		order by bCategorySeq
	</select>	

	<!-- === 해당하는 게시판 카테고리명 알아오기 === -->
	<select id="getBCategoryName" parameterType="String" resultType="String">
		select bCategoryName
		from tbl_boardCategory
		where bCategorySeq = #{bCategory}
	</select>


	
	
	
	
	



	
	<!-- === &57. 글쓰기(파일첨부가 없는 글쓰기) === -->
	<insert id="boardWrite" parameterType="com.spring.board.model.BoardVO_OHJ">
		insert into tbl_board(boardSeq, fk_bCategorySeq, fk_employeeId, subject, content, regDate, readCount)
		values(tbl_board_boardSeq.nextval, #{fk_bCategorySeq}, #{fk_employeeId}, #{subject}, #{content}, default, default)
	</insert>
	
	
	<!-- === &61. 페이징 처리를 안한 검색어가 없는 전체 글목록 보여주기 === -->
	<!-- 
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO_OHJ">
		select boardSeq, subject, name, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
		from tbl_board B JOIN tbl_employee E
		ON B.fk_employeeId = E.employeeId
		order by regDate desc
	</select>
	-->
	
	<!-- === 먼저 &61 을 주석처리하고서 &95. 페이징처리를 안한 검색어가 없는 전체 글목록 보여주기(+댓글의 갯수) === -->
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO_OHJ">
		select boardSeq, subject, name, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
			 , commentCount
		from tbl_board B JOIN tbl_employee E
		ON B.fk_employeeId = E.employeeId
		order by regDate desc
	</select>
	
	<!-- === &65. 글1개 조회하기 === -->
	<!--
	<select id="getView" parameterType="HashMap" resultType="com.spring.board.model.BoardVO_OHJ">
		select previousBoardSeq, previousSubject
		     , boardSeq, fk_bCategorySeq, bCategoryName, subject, fk_employeeid, name, positionName, content
		     , regDate, readCount
		     , nextBoardSeq,nextSubject
		from
		(
		    select lag(boardSeq,1) over(order by regDate desc) AS previousBoardSeq
		         , lag(subject,1) over(order by regDate desc) AS previousSubject
		              
		         , boardSeq, fk_bCategorySeq, bCategoryName, subject, fk_employeeid, name, positionName, content
		         , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
		    
		         , lead(boardSeq,1) over(order by regDate desc) AS nextBoardSeq
		         , lead(subject,1) over(order by regDate desc) AS nextSubject
		    from tbl_board B JOIN tbl_boardCategory C
		    ON B.fk_bCategorySeq = C.bCategorySeq
		    JOIN tbl_employee E
		    ON B.fk_employeeId = E.employeeId
		    JOIN tbl_position P
		    ON E.fk_positionNo = P.positionNo
		) V
		where boardSeq = #{boardSeq}
	</select>
	-->
	
	<!-- === 먼저 &65 를 주석처리 하고서, &126-2(강사님은 없음). : 글1개 조회하기(이전글,다음글에 검색조건 적용 + commentAccess 컬럼 추가) === -->
	
	<!-- === &161. (댓글 및 (답변글쓰기 및) "파일첨부가 있는" 게시판에서) 글1개 조회하기 === 
			  먼저 위의 &140(나는 &65) 을 주석처리 한 다음에 아래와 같이 한다. (fileName, orgFilename, fileSize 컬럼 추가)-->
	<!-- 익명형 게시판을 위해, join과 userType추가함 -->
	<select id="getView" parameterType="HashMap" resultType="com.spring.board.model.BoardVO_OHJ">
		select previousBoardSeq, previousSubject
			 , commentAccess
			 , profilename
		     , boardSeq, fk_bCategorySeq, bCategoryName, subject, fk_employeeid, name, positionName, content
		     , regDate, readCount
		     , nextBoardSeq,nextSubject
		     
		     , fileName, orgFilename, fileSize
		     , userType
		from
		(
		    select lag(boardSeq,1) over(order by boardSeq desc) AS previousBoardSeq
		         , lag(subject,1) over(order by boardSeq desc) AS previousSubject
		              
		         , commentAccess
		         , profilename 
		         , boardSeq, fk_bCategorySeq, bCategoryName, subject, fk_employeeid, name, positionName, content
		         , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
		         
		         , fileName, B.orgFilename, B.fileSize
		         , userType
		    
		         , lead(boardSeq,1) over(order by boardSeq desc) AS nextBoardSeq
		         , lead(subject,1) over(order by boardSeq desc) AS nextSubject
		    from tbl_board B JOIN tbl_boardCategory C
		    ON B.fk_bCategorySeq = C.bCategorySeq
		    JOIN tbl_employee E
		    ON B.fk_employeeId = E.employeeId
		    JOIN tbl_position P
		    ON E.fk_positionNo = P.positionNo
		    
		    where 1=1
		
		<!-- 
			<if test='fromDate == "" and toDate == ""'> 맨처음목록보기에서는 3달전~현재의 글을 보여줌
			and regDate BETWEEN add_months(sysdate,-3) AND sysdate
			</if> 
		-->
			<if test='fromDate != "" and toDate != ""'>
			and to_char(regDate, 'yyyy-mm-dd') BETWEEN #{fromDate} AND #{toDate}
			</if>
			
			<!-- bCategory가 0이면(맨처음목록보기/전체선택), 조건없이 전체를 다 보여줌 -->
			<if test='bCategory == ""'> <!-- 유저가 get방식으로 장난치는 경우 : select결과가 없도록 해야함. -->
			and fk_bCategorySeq = -99
			</if>
			<if test='bCategory != "" and bCategory != "0"'> 
			and fk_bCategorySeq = #{bCategory}
			</if>
			
			<if test='searchType != "" and searchWord != ""'>
			and lower( ${searchType} ) like '%' || lower( #{searchWord} ) || '%'
			</if>
		) V
		where boardSeq = #{boardSeq}
	</select>
	
	<!-- === &67. 글조회수 1증가 하기 === -->
	<update id="addReadCount" parameterType="String">
		update tbl_board set readCount = readCount + 1
		where boardSeq = #{boardSeq}
	</update>
	
	
	<!-- === &75. 1개글 수정하기 === -->
	<update id="boardEdit" parameterType="com.spring.board.model.BoardVO_OHJ">
		update tbl_board set subject = #{subject}, content = #{content}
		where boardSeq = #{boardSeq}
	</update>
	
	
	<!-- === &80. 1개글 삭제하기 === -->
	<delete id="boardDel" parameterType="HashMap">
		delete from tbl_board
		where boardSeq = #{boardSeq}
	</delete>
	
	
	<!-- &88. 댓글쓰기(tbl_boardComment 테이블에 insert) -->
	<insert id="boardCommentWrite" parameterType="com.spring.board.model.BoardCommentVO_OHJ">
		<!-- 첨부파일이 없는 경우 -->
		insert into tbl_boardComment(commentseq,fk_boardseq,fk_employeeid,content,regdate)
		values(tbl_boardComment_commentSeq.nextval, #{fk_boardSeq}, #{fk_employeeId}, #{content}, default)
		<!-- 첨부파일이 있는 경우 -->
		
	</insert>
	
	<!-- &89. tbl_board 테이블에 commentCount 컬럼이 1증가(update) -->
	<update id="updateCommentCount" parameterType="String">
		update tbl_board set commentcount = commentcount+1
		where boardseq = #{fk_boardSeq}
	</update>
	
	
	<!-- === &93. 원게시물에 딸린 댓글들을 조회해오는 것 === -->
	<!-- 첨부파일이 없는 경우 -->
	<select id="getCommentList" parameterType="String" resultType="com.spring.board.model.BoardCommentVO_OHJ">
		select commentSeq, E.name, P.positionName, content, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		from tbl_boardComment C JOIN tbl_employee E
		ON C.fk_employeeId = E.employeeId
		JOIN tbl_position P
		ON E.fk_positionNo = P.positionNo
		where fk_boardSeq = #{fk_boardSeq}
		order by commentSeq desc
	</select>
	
	
	<!-- === &105. 페이징 처리를 안한, 검색어가 있는 전체 글목록 보여주기 === + fk_bCategorySeq와 content추가 / + JOIN 및 bCategoryName추가 -->
	<select id="boardListSearch" parameterType="HashMap" resultType="com.spring.board.model.BoardVO_OHJ">
		select fk_bCategorySeq, content, bCategoryName
			 , boardSeq, subject, name, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
			 , commentCount
		from tbl_board B JOIN tbl_employee E
		ON B.fk_employeeId = E.employeeId
		JOIN tbl_boardCategory C
		ON B.fk_bCategorySeq = C.bCategorySeq
		
		where 1=1
		
	<!--	
		<if test='fromDate == "" and toDate == ""'> 맨처음목록보기에서는 3달전~현재의 글을 보여줌
		and regDate BETWEEN add_months(sysdate,-3) AND sysdate
		</if>
	-->	
		<if test='fromDate != "" and toDate != ""'>
		and to_char(regDate, 'yyyy-mm-dd') BETWEEN #{fromDate} AND #{toDate}
		</if>
		
		<!-- bCategory가 0이면(맨처음목록보기/전체선택), 조건없이 전체를 다 보여줌 -->
		<if test='bCategory == ""'> <!-- 유저가 get방식으로 장난치는 경우 : select결과가 없도록 해야함. -->
		and fk_bCategorySeq = -99
		</if>
		<if test='bCategory != "" and bCategory != "0"'> 
		and fk_bCategorySeq = #{bCategory}
		</if>
		
		<if test='searchType != "" and searchWord != ""'>
		and lower( ${searchType} ) like '%' || lower( #{searchWord} ) || '%'
		</if>
		
		order by regDate desc
	</select>
	
	
	<!-- === &117. 총 게시물 건수(totalCount) 구하기 - 검색이 있을때와 검색이 없을때로 나뉜다. === -->
	<select id="getTotalCount" parameterType="HashMap" resultType="int">
		select count(*)
		from tbl_board B JOIN tbl_employee E
		ON B.fk_employeeId = E.employeeId
		where 1=1
		
		<if test='fromDate == "" and toDate == ""'> <!-- 맨처음목록보기에서는 3달전~현재의 글을 보여줌 -->
		and regDate BETWEEN add_months(sysdate,-3) AND sysdate
		</if>
		<if test='fromDate != "" and toDate != ""'>
		and to_char(regDate, 'yyyy-mm-dd') BETWEEN #{fromDate} AND #{toDate}
		</if>
		
		<!-- bCategory가 0이면(맨처음목록보기/전체선택), 조건없이 전체를 다 보여줌 -->
		<if test='bCategory == ""'> <!-- 유저가 get방식으로 장난치는 경우 : select결과가 없도록 해야함. -->
		and fk_bCategorySeq = -99
		</if>
		<if test='bCategory != "" and bCategory != "0"'> 
		and fk_bCategorySeq = #{bCategory}
		</if>
		
		<if test='searchType != "" and searchWord != ""'>
		and lower( ${searchType} ) like '%' || lower( #{searchWord} ) || '%'
		</if>
		
	</select>
	
	
	<!-- === &120. 페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함한것) + 기존의 regDate정렬에서 boardSeq정렬로 바꿈. + fk_bCategorySeq 조회 === -->
	
	<!-- === &160. "파일첨부가 있는" (답변형 게시판의) 페이징 처리한 글목록 가져오기(검색이 있든지, 검색이 없든지 모두 다 포함한것) === 
			  먼저 위의 &148(나는 &120) 을 주석처리 한 이후에 아래와 같이 한다. -> ,fileName(WAS에 저장된 파일명) 추가함.
	-->
	<!-- 익명형 게시판을 위해, join과 userType추가함 -->
	<!-- 말머리설정을 위해, header와 bCategoryName추가함 -->
	<select id="boardListSearchWithPaging" parameterType="HashMap" resultType="com.spring.board.model.BoardVO_OHJ">
		select fk_bCategorySeq, boardSeq, subject, name, regDate, readCount, commentCount
			  ,fileName
			  , userType
			  , header, bCategoryName
		from
		(
		    select row_number() over(order by boardSeq desc) AS rno
		    	 , fk_bCategorySeq
		         , boardSeq, subject, name, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate, readCount
		         , commentCount
		         ,fileName
		         , userType
		         , header, bCategoryName
		    from tbl_board B JOIN tbl_employee E
		    ON B.fk_employeeId = E.employeeId
		    JOIN tbl_boardCategory C
    		ON B.fk_bCategorySeq = C.bCategorySeq
		    
		    where 1=1
		    
		    <if test='fromDate == "" and toDate == ""'> <!-- 맨처음목록보기에서는 3달전~현재의 글을 보여줌 -->
			and regDate BETWEEN add_months(sysdate,-3) AND sysdate
			</if>
			<if test='fromDate != "" and toDate != ""'>
			and to_char(regDate, 'yyyy-mm-dd') BETWEEN #{fromDate} AND #{toDate}
			</if>
			
			<!-- bCategory가 0이면(맨처음목록보기/전체선택), 조건없이 전체를 다 보여줌 -->
			<if test='bCategory == ""'> <!-- 유저가 get방식으로 장난치는 경우 : select결과가 없도록 해야함. -->
			and fk_bCategorySeq = -99
			</if>
			<if test='bCategory != "" and bCategory != "0"'> 
			and fk_bCategorySeq = #{bCategory}
			</if>
			
			<if test='searchType != "" and searchWord != ""'>
			and lower( ${searchType} ) like '%' || lower( #{searchWord} ) || '%'
			</if>
		) V
		where rno between #{startRno} and #{endRno}
	</select>
	
	
	
	<!-- === 검색어의 빈도를 나타내기 위해, 검색어가 있으면 '검색키워드 기록'테이블에 insert하기 === -->
	<insert id="registerSearchKeyword" parameterType="String">
		insert into tbl_keywordHistory(keywordSeq,keyword)
		values(tbl_keywordHistory_keywordSeq.nextval, lower(#{searchWord}))
	</insert>
	
	<!-- === '검색어키워드기록'을 가져와서 하나의 문자열로 만들기 === -->
	<select id="getKeywordHistory" resultType="String">
		select keyword from tbl_keywordHistory
	</select>
	
	
	
	
	<!-- === &159. 글쓰기(파일첨부가 있는 글쓰기) === -->
	<insert id="boardWrite_withFile" parameterType="com.spring.board.model.BoardVO_OHJ">
		insert into tbl_board(boardSeq, fk_bCategorySeq, fk_employeeId, subject, content, regDate, readCount, fileName, orgFilename, fileSize)
		values(tbl_board_boardSeq.nextval, #{fk_bCategorySeq}, #{fk_employeeId}, #{subject}, #{content}, default, default, #{fileName}, #{orgFilename}, #{fileSize})
	</insert>
	
	
	
	
	
	
	
</mapper>