<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="hr">
	
	
	<!-- select 되어져 나온 값을 이 HashMap에 넣겠다는 의미이다. -->
	<resultMap type="HashMap" id="empDeptMap">
		<result property="department_id" 	column="department_id"    javaType="String" />
		<result property="department_name" 	column="department_name"  javaType="String" />
		<result property="employee_id" 		column="employee_id" 	  javaType="String" />
		<result property="fullname" 		column="fullname" 		  javaType="String" />
		<result property="hire_date" 		column="hire_date" 		  javaType="String" />
		<result property="monthsal" 		column="monthsal" 		  javaType="String" />
		<result property="gender" 			column="gender" 		  javaType="String" />
		<result property="age" 				column="age" 			  javaType="String" />
	</resultMap>
	
	<!-- 이미 DAO에서 sqlsession3.selectList("hr.empList")로 메소드를 선언했으니(List로 반환될 것을 안다.), List의 제네릭 타입을 resultType에 적어준다. -->
	<select id="empList" resultMap="empDeptMap"> 
		select E.department_id, D.department_name, E.employee_id, 
	           E.first_name || ' ' || E.last_name AS fullname,
	           to_char(E.hire_date, 'yyyy-mm-dd') AS hire_date,
	           nvl(E.salary + E.salary*E.commission_pct, E.salary) AS monthsal,
	           func_gender(E.jubun) AS gender,
	           func_age(E.jubun) AS age 
	    from employees E left join departments D
	    on E.department_id = D.department_id
	</select>
	
	
</mapper>